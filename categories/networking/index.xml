<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Networking on JWillikers</title>
    <link>https://jwillikers.com/categories/networking/</link>
    <description>Recent content in Networking on JWillikers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jwillikers.com/categories/networking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>UniFi Controller</title>
      <link>https://jwillikers.com/posts/unifi_controller/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jwillikers.com/posts/unifi_controller/</guid>
      <description>For wi-fi, I use use a UniFi AP. One slightly annoying aspect of this is the UniFi Controller. If you don&amp;#8217;t have a smartphone or need to manage more than one device, you&amp;#8217;ll need to set one up. I provide a brief tutorial for setting up the UniFi Controller with Docker Compose here.
TutorialAn existing Docker image makes setting up the UniFi Controller a breeze. Here&amp;#8217;s how.
Install DockerFirst, you must install Docker on your system.</description>
    </item>
    
    <item>
      <title>DNS over TLS with Unbound</title>
      <link>https://jwillikers.com/posts/unbound_dns_over_tls/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jwillikers.com/posts/unbound_dns_over_tls/</guid>
      <description>Recently, Firefox announced it&amp;#8217;s roll-out of DNS over HTTPS (DoH). That made me think, &#34;Encrypting DNS&amp;#8230;&amp;#8203; Why don&amp;#8217;t I do that for my home network?&#34; Well, I&amp;#8217;ve now had the opportunity to configure my Unbound DNS resolver to encrypt it&amp;#8217;s DNS requests. Unbound has support built-in for DoH&amp;#8217;s sibling protocol, DNS over TLS (DoT). Instead of encrypting DNS traffic and masking it as standard HTTPS traffic, it uses the dedicated port 853.</description>
    </item>
    
    <item>
      <title>OpenSMTPD Relay on Ubuntu</title>
      <link>https://jwillikers.com/posts/opensmtpd_ubuntu/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jwillikers.com/posts/opensmtpd_ubuntu/</guid>
      <description>It can be handy to have your system email you if it detects an issue or potential security risk. Unfortunately, this isn&amp;#8217;t always straightforward, especially when you want to send an email from your desktop computer. Sending an email directly from your desktop to your email account is likely going to accomplish nothing. The email will likely be blocked since, to your email provider, it is from an unknown source. I ran into this problem recently trying to set up SmartMonTools to send an email when it detected hard drive errors.</description>
    </item>
    
    <item>
      <title>IPv6 on OpenBSD</title>
      <link>https://jwillikers.com/posts/openbsd_ipv6/</link>
      <pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jwillikers.com/posts/openbsd_ipv6/</guid>
      <description>Configuring IPv6 on my OpenBSD home router was a much more difficult task than I&amp;#8217;d expected. While this was mostly due to the steep learning curve of IPv6 and DHCPv6, OpenBSD doesn&amp;#8217;t provide DHCPv6 support in its native DHCP daemon. I&amp;#8217;ve documented my setup and difficulties here in the hope it saves some time for someone else.
ConfigurationI configured IPv6 on on my home router running OpenBSD 6.7.
PFIPv6 packets need to get through the firewall for anything to happen.</description>
    </item>
    
    <item>
      <title>PF Badhost</title>
      <link>https://jwillikers.com/posts/pf_badhost/</link>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jwillikers.com/posts/pf_badhost/</guid>
      <description>Blocking connections to nefarious IP addresses in your firewall is usually a good idea. On OpenBSD, the pf-badhost script updates PF to block traffic to and from such addresses. This post walks through my installation and verification of pf-badhost. Make sure to check out the well-written installation instructions, too.
ConfigureDownload the pf-badhost.sh script.
ftp https://www.geoghegan.ca/scripts/pf-badhost.sh Install the script with the appropriate permissions.
install -g bin -m 644 -o root pf-badhost.sh /usr/local/bin/ 1 The script will be owned by root, belong to the bin group, and be readable by everyone and writeable by the owner.</description>
    </item>
    
    <item>
      <title>DNSSEC with Unbound</title>
      <link>https://jwillikers.com/posts/unbound_dnssec/</link>
      <pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jwillikers.com/posts/unbound_dnssec/</guid>
      <description>Ever want to enable DNSSEC on your Unbound OpenBSD 6.6 server? Me too! Using this article as a guide, I document the process.
Unbound ConfigurationUse the ftp command to download the Root Hints.
ftp -o /var/unbound/etc/root.hints https://www.internic.net/domain/named.root Download the trust anchor file with the unbound-anchor utility.
unbound-anchor Configure unbound.conf. Add the location of the root.hints file and uncomment the lines with the keys auto-trust-anchor-file and val-log-level.
/var/unbound/etc/unbound.conf # Uncomment to enable DNSSEC validation.</description>
    </item>
    
    <item>
      <title>Unbound Adblock</title>
      <link>https://jwillikers.com/posts/unbound_adblock/</link>
      <pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jwillikers.com/posts/unbound_adblock/</guid>
      <description>Ever want to get rid of all those annoying internet ads? Me too. I&amp;#8217;d been planning on using something like Pi-hole, but recently stumbled upon unbound-adblock, which is perfect for my OpenBSD home router. The setup is very well-documented there, but I provide my own, slightly-modified setup instructions here. Most notably, the cron-job runs at 6:30 AM, not midnight, and I refined the PF rule which redirects DNS requests to Google&amp;#8217;s DNS servers.</description>
    </item>
    
    <item>
      <title>PPPoE on OpenBSD</title>
      <link>https://jwillikers.com/posts/pppoe_openbsd/</link>
      <pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jwillikers.com/posts/pppoe_openbsd/</guid>
      <description>Some ISP&amp;#8217;s establish connections with their customers&#39; networks through PPPoE. I recently setup an OpenBSD 6.6 router which required PPPoE. This is my story.
DNS ServersIf necessary, configure your system to use your preferred DNS nameservers.
Tip: A common way of connecting to your ISP&amp;#8217;s network is through DHCP. DHCP is capable of providing your system with DNS nameservers according to RFC 2132 and RFC 2937. To my knowledge, this capability is absent from the PPPoE Specification.</description>
    </item>
    
  </channel>
</rss>